<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Orders | Admin Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .sidebar {
      transition: all 0.3s ease-in-out;
    }
  </style>
</head>

<body class="bg-black text-white flex flex-col min-h-screen">

  <!-- Top Navbar (for small screens) -->
  <header class="bg-zinc-900 px-5 py-4 flex justify-between items-center md:hidden">
    <h1 class="font-bold text-xl tracking-wide">ELITECART</h1>
    <button id="menuBtn" class="text-white focus:outline-none">
      <span class="material-icons text-3xl">menu</span>
    </button>
  </header>

  <div class="flex flex-1">
    <!-- Sidebar -->
    <aside id="sidebar" class="sidebar fixed md:static top-0 left-0 w-60 h-full bg-zinc-900 p-5 shadow-lg transform -translate-x-full md:translate-x-0 z-50">
      <%- include('../partials/sidebar') %>
    </aside>

    <!-- Overlay for mobile -->
    <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 hidden md:hidden z-40"></div>

    <!-- Main Content -->
    <main class="flex-1 p-3 md:ml-10 transition-all duration-300 md:px-3 md:py-2">
      <div class="bg-neutral-900 rounded-2xl p-5 shadow-lg border border-gray-800">
        <!-- Header -->
        <div class="flex flex-col sm:flex-row justify-between sm:items-center mb-6 gap-4">
          <h2 class="text-2xl font-bold text-white">Orders</h2>
          <div class="relative w-full sm:w-72">
            <input 
              type="text" 
              placeholder="🔍 Search" 
              class="w-full px-4 py-2 rounded-lg bg-gray-800 text-gray-300 border border-gray-700 focus:outline-none focus:ring-2 focus:ring-green-400"
            />
          </div>
        </div>

        <!-- Orders Table -->
        <div class="overflow-x-auto rounded-lg border border-gray-700">
          <table class="min-w-full text-sm text-left">
            <thead class="bg-gray-800 text-gray-300 uppercase text-xs">
              <tr>
                <th class="px-6 py-4 font-semibold">ID</th>
                <th class="px-6 py-4 font-semibold">Name</th>
                <th class="px-6 py-4 font-semibold">Payment</th>
                <th class="px-6 py-4 font-semibold">Status</th>
                <th class="px-6 py-4 font-semibold">Price</th>
                <th class="px-6 py-4 text-center font-semibold">Action</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-700">
              <% orders.forEach((order, index) => { %>
                <tr class="hover:bg-gray-800 transition">
                  <td class="px-6 py-4">#<%= index + 1 %></td>
                  <td class="px-6 py-4"><%= order.userId?.name || "Unknown" %></td>
                  <td class="px-6 py-4"><%= order.paymentMethod %></td>
                  <td class="px-6 py-4"><%= order.orderStatus %></td>
                  
                  <td class="px-6 py-4 font-medium">₹<%= order.grandTotal ? order.grandTotal.toFixed(2) : '0.00' %></td>
                  <td class="px-6 py-4 text-center">
                    <button 
                      onclick="openEditOrderModal('<%= order._id %>')" 
                      class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-semibold text-xs sm:text-sm transition shadow-md hover:shadow-lg">
                      More Details
                    </button>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Pagination -->
      <div class="flex flex-wrap justify-center items-center mt-6 gap-2">
        <% if (currentPage > 1) { %>
          <a href="?page=<%= currentPage - 1 %>" class="bg-gray-800 text-gray-300 px-4 py-2 rounded-md hover:bg-gray-700 transition">Previous</a>
        <% } %>

        <% for (let i = 1; i <= totalPages; i++) { %>
          <a 
            href="?page=<%= i %>" 
            class="px-4 py-2 rounded-md <%= currentPage === i ? 'bg-white text-black' : 'bg-gray-800 text-gray-300 hover:bg-gray-700' %> transition"
          >
            <%= i %>
          </a>
        <% } %>

        <% if (currentPage < totalPages) { %>
          <a href="?page=<%= currentPage + 1 %>" class="bg-gray-800 text-gray-300 px-4 py-2 rounded-md hover:bg-gray-700 transition">Next</a>
        <% } %>
      </div>
    </main>
  </div>

  <!-- Order Details Modal -->
  <div id="editOrderModal" class="hidden fixed inset-0 bg-black bg-opacity-70 items-center justify-center z-50">
    <div class="bg-white text-gray-900 rounded-2xl shadow-2xl max-w-5xl w-11/12 max-h-[90vh] overflow-y-auto p-6 relative">
      <button onclick="closeEditOrderModal()" class="absolute top-3 right-3 bg-gray-200 hover:bg-gray-300 text-gray-700 rounded-full w-8 h-8 flex items-center justify-center">
        ✕
      </button>
      <div id="editOrderContent"></div>
    </div>
  </div>

  <!-- Scripts -->
  <script>
    // Sidebar toggle for mobile
    const menuBtn = document.getElementById("menuBtn");
    const sidebar = document.getElementById("sidebar");
    const overlay = document.getElementById("overlay");

    menuBtn?.addEventListener("click", () => {
      sidebar.classList.toggle("-translate-x-full");
      overlay.classList.toggle("hidden");
    });

    overlay?.addEventListener("click", () => {
      sidebar.classList.add("-translate-x-full");
      overlay.classList.add("hidden");
    });

    // Open modal
    async function openEditOrderModal(orderId) {
      const modal = document.getElementById("editOrderModal");
      const content = document.getElementById("editOrderContent");
      modal.classList.remove("hidden");
      modal.classList.add("flex");

      content.innerHTML = `<p class="text-center text-gray-500 text-lg">Loading order details...</p>`;

      try {
        const res = await fetch(`/admin/Orders/${orderId}`);
        const data = await res.json();

        if (data.success) {
          const order = data.order;

          const productHTML = order.items.map(item => `
          <div class="flex justify-between items-center border-b border-gray-200 py-3">
  <div>
    <span class="font-semibold text-gray-800 block">${item.productId?.name || "Unknown Product"}</span>
    <span class="text-sm text-gray-500">₹${Number(item.finalPrice || 0).toFixed(2)} each</span>
  </div>

  <div class="flex items-center gap-3">
    <span class="font-semibold text-gray-700">x${item.quantity}</span>
    <span class="font-bold text-gray-900">₹${Number(item.total || 0).toFixed(2)}</span>
  </div>
</div>


          `).join('');

       content.innerHTML = `
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">

    <!-- Left Column -->
    <div class="space-y-6">

      <!-- Product Details -->
      <div class="bg-gradient-to-b from-gray-50 to-white border border-gray-200 rounded-2xl shadow-sm p-5">
        <h3 class="bg-gray-100 text-gray-800 text-lg font-bold px-4 py-2 rounded-lg mb-4">Product Details</h3>
        ${productHTML}
      </div>

      <!-- Customer Details -->
      <div class="bg-gradient-to-b from-gray-50 to-white border border-gray-200 rounded-2xl shadow-sm p-5">
        <h3 class="bg-gray-100 text-gray-800 text-lg font-bold px-4 py-2 rounded-lg mb-4">Customer Details</h3>
        <div class="space-y-3 text-lg font-medium">
          <p><span class="text-gray-500">Name:</span> <span class="font-bold">${order.userId?.name || "N/A"}</span></p>
          <p><span class="text-gray-500">Phone:</span> <span class="font-bold">${order.userId?.mobile || order.address?.mobile || "N/A"}</span></p>
          <p><span class="text-gray-500">Payment:</span> <span class="font-bold">${order.paymentMethod || "N/A"}</span></p>
          <p><span class="text-gray-500">Address:</span>
            <span class="font-bold">
              ${order.address?.house || ""}, 
              ${order.address?.street || ""}, 
              ${order.address?.city || ""}, 
              ${order.address?.state || ""}, 
              ${order.address?.country || ""}, 
              ${order.address?.pincode || ""}
            </span>
          </p>
        </div>
      </div>
    </div>

    <!-- Right Column -->
    <div class="bg-gradient-to-b from-gray-50 to-white border border-gray-200 rounded-2xl shadow-sm p-5">
      <h3 class="bg-gray-100 text-gray-800 text-lg font-bold px-4 py-2 rounded-lg mb-4">Order Update</h3>

      <div class="space-y-4 text-lg font-medium">
        <p><span class="text-gray-500">Order ID:</span> <span class="font-bold text-gray-800">${order.orderId}</span></p>
        <p><span class="text-gray-500">Ordered On:</span> <span class="font-bold text-gray-800">${new Date(order.createdAt).toLocaleDateString()}</span></p>
        <p><span class="text-gray-500">Current Status:</span> 
          <span class="font-bold text-yellow-600">${order.orderStatus || "Pending"}</span>
        </p>
         <p><span class="text-gray-500">Payment Status:</span> 
          <span class="font-bold text-yellow-600">${order.paymentStatus || "Pending"}</span>
        </p>
        <p><span class="text-gray-500">Total:</span> 
          <span class="font-bold text-green-600">₹${order.grandTotal || 0}</span>
        </p>

       <div class="mt-4">
  <label for="orderStatus" class="text-gray-500 block mb-1 font-medium">Update Status:</label>
  <select id="orderStatus" class="w-full bg-white border border-gray-300 rounded-lg px-3 py-2 text-lg font-semibold focus:ring-2 focus:ring-blue-400">
    <option ${order.orderStatus === "Pending" ? "selected" : ""}>Pending</option>
    <option ${order.orderStatus === "Confirmed" ? "selected" : ""}>Confirmed</option>
    <option ${order.orderStatus === "Shipped" ? "selected" : ""}>Shipped</option>
    <option ${order.orderStatus === "Out for Delivery" ? "selected" : ""}>Out for Delivery</option>
    <option ${order.orderStatus === "Delivered" ? "selected" : ""}>Delivered</option>
    <option ${order.orderStatus === "Cancelled" ? "selected" : ""}>Cancelled</option>
  </select>
</div>


        <button onclick="updateOrderStatus('${order._id}')"
          class="w-full bg-gradient-to-r from-blue-500 to-blue-700 text-white font-bold rounded-xl py-3 mt-6 hover:from-blue-600 hover:to-blue-800 transition-all duration-300 shadow-md">
          Update Order
        </button>
      </div>
    </div>
  </div>
`;

        } else {
          content.innerHTML = `<p class="text-center text-red-500">Order details not found.</p>`;
        }
      } catch (error) {
        console.error(error);
        content.innerHTML = `<p class="text-center text-red-500">Error loading order details.</p>`;
      }
    }

    function closeEditOrderModal() {
      const modal = document.getElementById("editOrderModal");
      modal.classList.add("hidden");
      modal.classList.remove("flex");
    }

  async function updateOrderStatus(orderId) {
  const newStatus = document.getElementById("orderStatus").value;

  try {
    const res = await fetch(`/admin/orders/update-status/${orderId}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ status: newStatus }),
    });
    const data = await res.json();

    if (data.success) {
      alert("✅ " + data.message);
      closeEditOrderModal();
      location.reload();
    } else {
      alert("⚠️ " + data.message);
    }
  } catch (err) {
    console.error(err);
    alert("⚠️ Something went wrong!");
  }
}

  
  </script>

  <!-- Google Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</body>
</html>
