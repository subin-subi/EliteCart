<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Personal Information | Elite Cart</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet"/>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
   <link rel="stylesheet" href="css/output.css" />
  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .animate-fadeIn { animation: fadeIn 0.3s ease-out; }
  </style>
</head>

<body class="bg-gray-50 min-h-screen flex flex-col">
  


  <!-- Navbar -->
  <%- include("../partials/nav") %>

  <div class="flex flex-1 mt-20 px-4 md:px-10 gap-6">

    <!-- Sidebar -->
    <div class="hidden md:block">
      <%- include("../partials/userSidebar") %>
    </div>

    <!-- Profile Section -->
    <section class="flex-1 bg-white shadow-xl rounded-2xl p-10 max-w-2xl mx-auto m-12 md:m-16">
      <h2 class="text-2xl font-semibold text-gray-800 mb-8 text-center">
        Personal Information
      </h2>

      <!-- Profile Image -->
      <div class="flex flex-col items-center mb-8">
        <img 
          id="profileImage"
          src="<%= user.profileImage || '/images/s.jpg' %>" 
          alt="Profile Image" 
          class="w-32 h-32 object-cover rounded-full border-4 border-gray-200 shadow"
        >
      </div>

      <!-- User Details -->
      <div class="space-y-4 text-gray-700">
        <p><span class="font-semibold">Name:</span> <%= user.name %></p>
        <p><span class="font-semibold">Email:</span> <%= user.email %></p>

        <% if (isGoogleUser) { %>
          <% if (user.mobileNo) { %>
            <p><span class="font-semibold">Phone:</span> <%= user.mobileNo %></p>
          <% } else { %>
            <p>
              <span class="font-semibold">Phone:</span> 
              <a id="addNumberLink" class="text-red-500 underline cursor-pointer hover:text-red-700 transition">
                Add Number
              </a>
            </p>
          <% } %>
        <% } else { %>
          <p><span class="font-semibold">Phone:</span> <%= user.mobileNo %></p>
        <% } %>
      </div>

      <!-- Edit Button -->
      <div class="text-center mt-10">
        <button 
          id="editProfileBtn" 
          class="bg-black text-white px-8 py-3 rounded-lg hover:bg-gray-800 transition-all duration-200"
        >
          Edit Information
        </button>
      </div>
    </section>
  </div>

  <!-- Edit Modal -->
  <div 
    id="editModal" 
    class="fixed inset-0 bg-black/50 hidden items-center justify-center z-50"
  >
    <div class="bg-white rounded-2xl shadow-2xl w-full max-w-lg p-6 relative animate-fadeIn overflow-y-auto max-h-[90vh]">
      
      <!-- Close Button -->
      <button 
        id="closeModal" 
        class="absolute top-3 right-4 text-gray-500 text-2xl hover:text-black transition"
      >
        &times;
      </button>

      <h3 class="text-xl font-semibold mb-5 text-center text-gray-800">
        Edit Personal Information
      </h3>

      <form id="editProfileForm" action="/user/profile" method="POST" enctype="multipart/form-data" class="space-y-5">

        <!-- Profile Image -->
      <div class="text-center">
  <label class="block text-sm font-medium text-gray-700 mb-2">Profile Image</label>
  
  <!-- Image Preview -->
  <div class="flex justify-center mb-3">
    <img 
      id="profilePreview" 
      src="<%= user.profileImage || '/images/s.jpg' %>" 
      alt="Profile Preview" 
      class="w-32 h-32 rounded-full object-cover border border-gray-300 shadow"
    >
  </div>

  <!-- File Input (Custom Button) -->
  <div class="flex justify-center mb-3">
    <label 
      for="profileImageInput" 
      class="bg-black text-white px-4 py-2 rounded-lg cursor-pointer hover:bg-gray-800 transition-all duration-200"
    >
      Choose File
    </label>
    <input 
      type="file" 
      id="profileImageInput" 
      name="profileImage" 
      accept="image/*" 
      class="hidden"
    >
  </div>

  <!-- Hidden input to store cropped image -->
  <input type="hidden" id="croppedImageInput" name="croppedImage">
</div>


        <!-- Cropping Section -->
        <div id="cropContainer" class="hidden mt-4">
          <p class="text-sm text-gray-600 mb-2">Adjust and crop your image below:</p>
          <div class="flex justify-center">
            <img id="cropImage" class="max-w-full rounded-lg" />
          </div>

          <div class="text-center mt-3">
            <button type="button" id="cropBtn" class="bg-black text-white px-4 py-2 rounded-lg hover:bg-gray-800">
              Crop Image
            </button>
          </div>
        </div>

        <!-- Name -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Name</label>
          <input 
            type="text" 
            name="name" 
            id="nameInput"
            value="<%= user.name %>" 
            required 
            class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-black"
          >
          <span id="nameError" class="text-red-500 text-sm hidden">Please enter a valid name (min 3 letters).</span>
        </div>

        <!-- Email -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
          <input 
            type="email" 
            name="email" 
            id="emailInput"
            value="<%= user.email %>" 
            required 
            class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-black"
          >
          <span id="emailError" class="text-red-500 text-sm hidden">Please enter a valid email address.</span>
        </div>

        <!-- Phone -->
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Phone</label>
          <input 
            type="tel" 
            name="phone" 
            id="phoneInput"
            value="<%= user.mobileNo %>" 
            class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-black"
          >
          <span id="phoneError" class="text-red-500 text-sm hidden">Please enter a valid phone number (10 digits).</span>
        </div>

        <!-- Update Button -->
        <button 
          type="submit" 
          class="w-full bg-black text-white py-2 rounded-lg hover:bg-gray-800 transition-all duration-200"
        >
          Update Details
        </button>
      </form>
    </div>
  </div>

  <!-- Footer -->
  <%- include('../partials/footer') %>

  <!-- JS -->
  <script>
    const modal = document.getElementById('editModal');
    const editBtn = document.getElementById('editProfileBtn');
    const closeModal = document.getElementById('closeModal');
    const addNumberLink = document.getElementById('addNumberLink');

    const profileInput = document.getElementById('profileImageInput');
    const cropContainer = document.getElementById('cropContainer');
    const cropImage = document.getElementById('cropImage');
    const cropBtn = document.getElementById('cropBtn');
    const profilePreview = document.getElementById('profilePreview');
    let cropper;

    // Open modal
    const openModal = () => {
      modal.classList.remove('hidden');
      modal.classList.add('flex');
    };

    if (editBtn) editBtn.addEventListener('click', openModal);
    if (addNumberLink) addNumberLink.addEventListener('click', openModal);

    // Close modal
    closeModal.addEventListener('click', () => {
      modal.classList.add('hidden');
      modal.classList.remove('flex');
    });

    // Close on outside click
    window.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
        modal.classList.remove('flex');
      }
    });

    // Image upload + crop
    profileInput.addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = () => {
          cropImage.src = reader.result;
          cropContainer.classList.remove('hidden');
          if (cropper) cropper.destroy();
          cropper = new Cropper(cropImage, { aspectRatio: 1, viewMode: 2 });
        };
        reader.readAsDataURL(file);
      }
    });
cropBtn.addEventListener('click', () => {
  if (cropper) {
    const canvas = cropper.getCroppedCanvas({ width: 300, height: 300 });
    const croppedBase64 = canvas.toDataURL(); // Base64 string
    profilePreview.src = croppedBase64;

    // Set hidden input value
    const croppedImageInput = document.getElementById("croppedImageInput");
    croppedImageInput.value = croppedBase64;

    cropContainer.classList.add('hidden');
    cropper.destroy();
  }
});


document.getElementById("editProfileForm").addEventListener("submit", async function(e){
  e.preventDefault();

  let isValid = true;

  const name = document.getElementById("nameInput").value.trim();
  const email = document.getElementById("emailInput").value.trim();
  const phone = document.getElementById("phoneInput").value.trim();
  const croppedImageBase64 = document.getElementById("croppedImageInput").value; // base64 from Cropper

  // Name validation
  if (name.length < 3 || !/^[a-zA-Z\s.]+$/.test(name)) {
    document.getElementById("nameError").classList.remove("hidden");
    isValid = false;
  } else {
    document.getElementById("nameError").classList.add("hidden");
  }

  // Email validation
  const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailPattern.test(email)) {
    document.getElementById("emailError").classList.remove("hidden");
    isValid = false;
  } else {
    document.getElementById("emailError").classList.add("hidden");
  }

  // Phone validation
  if (phone && !/^[1-9][0-9]{9}$/.test(phone)) {
    document.getElementById("phoneError").classList.remove("hidden");
    isValid = false;
  } else {
    document.getElementById("phoneError").classList.add("hidden");
  }

  if (!isValid) return; 

  try {
    const formData = new FormData();
    formData.append("name", name);
    formData.append("email", email);
    formData.append("phone", phone);

    if(croppedImageBase64) {
      const blob = await (await fetch(croppedImageBase64)).blob();
      formData.append("profileImage", blob, "profile.png");
    }

    const response = await axios.post("/profile", formData, {
      headers: { "Content-Type": "multipart/form-data" },
      withCredentials: true // Make sure cookies/session are sent
    });

    Swal.fire({
  title: 'Success!',
  text: 'Profile updated successfully.',
  icon: 'success',
  confirmButtonText: 'OK'
}).then(() => {
  // Redirect after clicking OK
  window.location.href = "/profile";
});

  } catch(err) {
    console.error("Error updating profile:", err);
    alert("Something went wrong.");
  }
});




  </script>

</body>
</html>
